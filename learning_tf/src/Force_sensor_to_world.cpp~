#include <ros/ros.h>
#include <tf/transform_listener.h>

#include <geometry_msgs/WrenchStamped.h>

void force_sensing(const geometry_msgs::WrencgStamped msg)
{ 
    tf::StampedTransform transform;
    try{
      listener.lookupTransform("/world", "/LForearm",  
                               ros::Time(0), transform);
    }
    catch (tf::TransformException ex){
      ROS_ERROR("%s",ex.what());
      ros::Duration(1.0).sleep();
    }

    std::cout << transform << std::endl;
  
}


int main(int argc, char** argv){
  ros::init(argc, argv, "my_tf_listener");

  ros::NodeHandle node;

  ros::Suscriber force_sens_sus = node.subscribe("coman/ft_sensor/LFP", 1000, force_sensing);

  ros::Publisher force_sens_pub = 
    node.advertise<geometry_msgs::WrenchStamped>("coman/ft_sensor/LFP_W", 1000);

  tf::TransformListener listener;

  ros::spin();
  return 0;
};
